apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: sre-operators-recording-rules
    role: recording-rules
  name: sre-operators-recording-rules
  namespace: openshift-monitoring
spec:
  groups:
    - name: sre-operators.rules
      rules:
        - expr:
            # csv_succeeded has a value of 1 or 0
            # subscription_sync_total is an integer with value >0
            # joining them with the operator ^ returns a value of 1 or 0
              label_replace(sre:telemetry:managed_labels, "cluster_version", "$0", "version", ".*")
            * on () group_right (_id, cluster_version, provider)
              sum by (exported_namespace, name, version, channel, package) (
                  label_replace(csv_succeeded, "name", "$1", "name", "([^.]+).*")
                ^ on (name) group_left (channel, package)
                  subscription_sync_total{name=~"addon-operator|aws-vpce-operator|custom-domains-operator|managed-node-metadata-operator|managed-upgrade-operator|must-gather-operator|ocm-agent-operator|osd-metrics-exporter|rbac-permissions-operator|openshift-splunk-forwarder-operator|aws-account-operator|certman-operator|cloud-ingress-operator|configure-alertmanager-operator|deadmanssnitch-operator|deployment-validation-operator|dynatrace-operator|gcp-project-operator|observability-operator|opentelemetry-operator|pagerduty-operator|route-monitor-operator"}
              )
          record:
            sre:operators:succeeded:raw
        - expr:
            # making sure that operators installed in user workload namespaces are ignored in case the same operator is installed in an openshift namespace
            sre:operators:succeeded:raw{exported_namespace =~ "openshift-.*"}
            or on(_id, name)
            sre:operators:succeeded:raw{exported_namespace !~ "openshift-.*"}
          record: sre:operators:succeeded
